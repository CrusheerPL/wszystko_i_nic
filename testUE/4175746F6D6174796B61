2 2
Bramka logiczna NOT jest:
wielowejsciowa
jednowejsciowa
4 3
Bramka OR ma na wyjsciu wartosc logiczna PRAWDA gdy:
na wszystkich wejsciach jest wartosc PRAWDA
na wszystkich wejsciach jest wartosc FALSZ
przynajmniej na jednym wejsciu jest wartosc PRAWDA
przynajmniej na jednym wejsciu jest wartosc FALSZ
4 1
Bramka AND ma na wyjsciu wartosc logiczna PRAWDA gdy:
na wszystkich wejsciach jest wartosc PRAWDA
na wszystkich wejsciach jest wartosc FALSZ
przynajmniej na jednym wejsciu jest wartosc PRAWDA
przynajmniej na jednym wejsciu jest wartosc FALSZ
4 1
Bramka NAND ma na wyjsciu wartosc logiczna FALSZ gdy:
na wszystkich wejsciach jest wartosc PRAWDA
na wszystkich wejsciach jest wartosc FALSZ
przynajmniej na jednym wejsciu jest wartosc PRAWDA
przynajmniej na jednym wejsciu jest wartosc FALSZ
4 2
Bramka NOR ma na wyjsciu wartosc logiczna PRAWDA gdy:
na wszystkich wejsciach jest wartosc PRAWDA
na wszystkich wejsciach jest wartosc FALSZ
przynajmniej na jednym wejsciu jest wartosc PRAWDA
przynajmniej na jednym wejsciu jest wartosc FALSZ
4 4
Bramka XNOR ma na wyjsciu wartosc logiczna PRAWDA gdy:
zawsze na wyjsciu jest PRAWDA, niezaleznie od stanu wejsc
przynajmniej na jednym wejsciu jest wartosc PRAWDA
przynajmniej na jednym wejsciu jest wartosc FALSZ
na wszystkich wejsciach jest wartosc PRAWDA lub na wszystkich wejsciach jest wartosc FALSZ
4 3
Bramka XOR ma na wyjsciu wartosc logiczna PRAWDA gdy:
zawsze na wyjsciu jest  FALSZ, niezaleznie od stanu wejsc
przynajmniej na jednym wejsciu jest wartosc PRAWDA
na jednym wejsciu  jest wartosc PRAWDA, na drugim wejsciu jest wartosc FALSZ
przynajmniej na jednym wejsciu jest wartosc FALSZ
4 2
Liczba 59 w systemach 2, 8 i 16 ma postac odpowiednio:
111011, 73, 3a
111011, 73, 3b
110111, 67, 37
110111, 67, 37
4 4
Charakterystyka statyczna elementu automatyki to:
zaleznosc wartosci sygnalu wyjsciowego w czasie
zaleznosc wartosci sygnalu wejsciowego i  wyjsciowego w czasie
zaleznosc wartosci sygnalu wejsciowego w czasie
zaleznosc wartosci sygnalu wyjsciowego od wejsciowego w stanie ustalonym y=f(x)
4 2
Charakterystyka dynamiczna elementu automatyki to:
zaleznosc wartosci sygnalu wyjsciowego w czasie
zaleznosc wartosci sygnalu wejsciowego- x=f(t) i  wyjsciowego w czasie y=f(t)
zaleznosc wartosci sygnalu wejsciowego w czasie
zaleznosc wartosci sygnalu wyjsciowego od wejsciowego w stanie ustalonym y=f(x)
4 4
Temperatura otoczenia 20 stopni Celsjusza, cisnienie otoczenia 1013 hPa, wilgotnosc wzgledna powietrza 65%, napiecie zasilania 220V (plus/minus 10%), cestotlowosc zasilania 50 Hz, cisnienie zasilania 140kPa to warunki znamionowe pracy urzadzen pomiarowych. Sa one podawane:
na stronie Ministerstwa Przemyslu
w karcie gwarancyjnej
na stronie www producenta
w instrukcjach fabrycznych
4 1
Dla generatora ze sprzezeniem zwrotnym warunkami dostatecznymi wzbudzenia ukladu sa:
warunek amplitudy |Ku|*B=1  i warunek fazy kat fi + kat ksi = 0 +2kpi
warunek amplitudy |Ku|*B=1  i warunek fazy kat fi + kat ksi = 180 +2kpi
warunek amplitudy |Ku|*B>1  i warunek fazy kat fi + kat ksi = pi/6 +2kpi
warunek amplitudy |Ku|*B>1  i warunek fazy kat fi + kat ksi = -pi/6 +2kpi
4 3
Najprostszy filtr dolnoprzepustowy RC zawiera:
2 elementy R i jeden C
1 element R i dwa C
elementy R i C (jeden R i jeden C)
2 elementy R i dwa elementy C
4 2
Najprostszy filtr gornoprzepustowy RC zawiera:
2 elementy C i jeden R
elementy C i R (jeden C i jeden R)
1 element R i dwa R
2 elementy R i dwa elementy C
4 2
Dla gornej czestotliwosci granicznej fg modul transmitancji filtrow dolno i gornoprzepustowego wynosi:
-3dB
3dB co odpowieda w mierze liniowej wartosci pierwiastek(2)/2=0,707 (spadek mocy do polowy)
-6db
6dB
4 3
Napiecie wyjsciowe potencjometru wynosi:
Uwy=x/l/Uz
Uwy=l/x/Uz
Uwy=(x/l)*Uz
Uwy=(l/x)*Uz
4 4
Najprostszy czujnik indukcyjnosciowy sklada sie z cewki powietrznej lub nawinietej na rdzen. 
Czujnik ten przetwarza przesuniecie liniowe rdzenia na zmiane pojemnosci
Czujnik ten przetwarza przesuniecie liniowe rdzenia na zmiane sily lorentza
Czujnik ten przetwarza przesuniecie liniowe rdzenia na zmiane indukcji magnetycznej
Czujnik ten przetwarza przesuniecie liniowe rdzenia na zmiane indukcyjnosci
4 2
Kondensator plaski jako pojemnosciowy czujnik przesuniecia wykorzystuje zaleznosc 
C=e0*er*d/S gdzie e0- przenikalnosc elektryczna prozni, er- przenikalnosc wzgledna dielektryka, S- powierzchnia okladek, d- odleglosc miedzy okladkami
C=e0*er*S/d gdzie e0- przenikalnosc elektryczna prozni, er- przenikalnosc wzgledna dielektryka, S- powierzchnia okladek, d- odleglosc miedzy okladkami
C=e0*er/S/d gdzie e0- przenikalnosc elektryczna prozni, er- przenikalnosc wzgledna dielektryka, S- powierzchnia okladek, d- odleglosc miedzy okladkami
C=e0*er/d/S gdzie e0- przenikalnosc elektryczna prozni, er- przenikalnosc wzgledna dielektryka, S- powierzchnia okladek, d- odleglosc miedzy okladkami
4 3
Silownik to:
inna nazwa silnika
element napedowy sluzacy w UAR w urzadzeniach pomiarowych
element napedowy sluzacy do ustawienia polozenia zaworow i przepustnic
urzadzenie wykonawcze, w ktorym energia czynnika roboczego jest zamieniana na energie elektryczna
4 1
Uklad Darlingtona sklada sie z dwoch tranzystorow bipolarnych. Wzmocnienie pradowe ukladu jest rowne w przyblizeniu (B1 i B2 to wzmocnienie pradowe tranzystorow odpowiednio T1 i T2):
B1*B2
B1*B2*B2
B1*B1*B2
B1*B1*B2*B2
4 4
Dla kazdego tranzystora bipolarnego prawdziwe sa zaleznosci:
IC=IE+IB  alfa= IC/IE   beta=IC/IB
IC=IE+IB  alfa= IE/IC   beta=IE/IB
IE=IC+IB  alfa= IB/IE   beta=IE/IB
IE=IC+IB  alfa= IC/IE   beta=IC/IB
4 2
Urzadzenie do pomiaru sily oraz jej jednostka to odpowiednio:
silownik      N (niuton)
dynamometr    N (niuton)
silnik        V (wolt)
silomierz     m (metr)
4 4
W ukladzie Darlingtona  B1=B2= 70. Wzmocnienie pradowe ukladu wynosi w przyblizeniu:
140
700
7000
4900
4 2
Co oznacza skrot STP w odniesieniu do mediow transmisji w sieciach komputerowych:
kabel koncentryczny
skretka ekranowana
skretka nieekranowana
swiatlowod
4 1
Impulsator fotoelektryczny jest to przetwornik  zamieniajacy:
predkosc wirowania na czestotliwosc
predkosc liniowa na sile
predkosc liniowa na napiecie
predkosc wirowania na napiecie
2 2
Temperature mozna mierzyc w sposob bezposredni:
tak
nie
4 3
W termometrach cisnieniowych:
wykorzystuje sie zaleznosc objetosci cieczy lub gazu od temperatury przy stalym ich cisnieniu
wykorzystuje sie zaleznosc objetosci cieczy lub gazu od cisnienia przy stalej ich temperaturze
wykorzystuje sie zaleznosc cisnienia cieczy lub gazu od temperatury przy stalej ich objetosci
wykorzystuje sie zaleznosc cisnienia cieczy lub gazu od objetosci przy stalej ich temperaturze
4 4
Punkt potrojnej rownowagi miedzy stanem stalym, cieklym a gazowym dla wody wynosi odpowiednio: 
0 K czyli -273,16 stopni C
100 K czyli -173,16 stopni C
373,16K czyli 100 stopni C
273,16K czyli 0 stopni C
4 1
Implikacja a=>b ma wartosc logiczna FALSZ tylko wtedy gdy:
poprzednik a ma wartosc logiczna PRAWDA, nastepnik b ma wartosc logiczna FALSZ
poprzednik a ma wartosc logiczna FALSZ, nastepnik b ma wartosc logiczna PRAWDA
poprzednik a ma wartosc logiczna PRAWDA, nastepnik b ma wartosc logiczna PRAWDA
poprzednik a ma wartosc logiczna FALSZ, a nastepnik b ma wartosc logiczna FALSZ
4 2
Termometr rezystancyjny PTC przyrzad pomiarowy sluzacy do pomiaru temperatury wykorzystujacy zmiane oporu towarzyszaca zmianom temperatury.
R= R0/[1 + alfa*(t-t0)] gdzie alfa wspolczynnik temperaturowy, (t-t0)- roznica temperatur
R= R0*[1 + alfa*(t-t0)] gdzie alfa wspolczynnik temperaturowy, (t-t0)- roznica temperatur
R= R0[1 + alfa/(t-t0)] gdzie alfa wspolczynnik temperaturowy, (t-t0)- roznica temperatur
R= R0[1 + (t-t0)/alfa] gdzie alfa wspolczynnik temperaturowy, (t-t0)- roznica temperatur